import App from "./src/App";
export default function home (){
return <App/>
}
// import Head from "next/head";
// import Image from "next/image";
// import styles from "../styles/Home.module.css";
// import { useEffect, useState, useRef } from "react";
// import Link from "next/link";
// import { useGlobalContext } from "../components/context";
// import Header from "../components/header";
// import { useRouter } from "next/router";
// import { AiFillDelete, AiFillEdit } from "react-icons/ai";

// export default function Home() {
//   const ref = useRef(null);
//   const [drawingBook, setDrawingBook] = useState(null);
//   useEffect(() => {
//     const ctx = ref.current
//     console.log(ctx)
//     ctx?.getContext("2d")?.fill(10,10, 50,50)
//   }, []);

//   const handleMove = (e) => {
//     const canvas = e.target;

//     if (true) {
//       var rect = canvas.getBoundingClientRect();
//       var x = e.clientX - rect.left;
//       var y = e.clientY - rect.top;
//       x = Math.floor(x / canvas.clientWidth);
//       y = Math.floor(y / canvas.clientHeight);
//       console.log(x, "hi ", y, rect);
//     }
//   };
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Pixel Art maker</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <form
//         id="popup"
//         onSubmit={(e) => {
//           console.log(e);
//         }}
//       >
//         <h3>Select the Dimensions Of the grid</h3>{" "}
//         <input
//           onChange={(e) => console.log(e)}
//           type="text"
//           id="width"
//           value="16"
//         />
//         X
//         <input
//           onChange={(e) => console.log(e)}
//           type="text"
//           id="height"
//           value="16"
//         />{" "}
//         <button id="close">OK</button>{" "}
//       </form>

//       <canvas
//       width={500}
//       height={500}
//         ref={ref}
//         className="canvas"
//         onMouseMove={(e) => handleMove(e)}
//       ></canvas>

//       <div id="toolbar">
//         {" "}
//         <span>
//           <AiFillEdit />{" "}
//         </span>{" "}
//         <span>
//           <AiFillDelete />{" "}
//         </span>{" "}
//       </div>
//     </div>
//   );
// }
// const Canvas = (canvas) => {
//   // initialize all canvas properties
//   const ctx = canvas?.getContext("2d");
//     ctx.fillStyle = "black";


//   function draw(x = 1, y = 1) {
//     ctx.fillRect(x, y, 50, 50); // creates a 50 X 50 rectangle with upper-left corner at (10,10)
//   } // method to draw a pixel on canvas
//   function erase(x, y) {
//     ctx.fillStyle = "white";
//   } // method to erase a pixel on canvas
//   function setcolor(color) {
//     ctx.fillStyle = color;
//   } // method to set the current color
//   function setmode(i) {} // method to set the active tool
//   function save() {} // method to save pixel art as image
//   function clear() {} // method to clear canvas
//   function addFrame() {} // method to add current frame to frame list
//   function deleteFrame(f) {} // method to delete a specific frame
//   function loadFrame(f) {} // method to load a specific frame onto canvas
//   function renderGIF() {} // method to render a GIF using frames
//   function undo() {} // method to undo a given step
//   function redo() {} // method to redo a given step
//   function addImage() {} // method to load an image as pixel art

//   return {
//     draw,
//     erase,
//     setcolor,
//     setmode,
//     save,
//     clear,
//     addFrame,
//     deleteFrame,
//     loadFrame,
//     renderGIF,
//     undo,
//     redo,
//     addImage,
//   };
// };
